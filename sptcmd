#!/bin/bash
# simple pt trace a command

usage() {
	cat <<EOU
Simple PT processor branch trace. The complete system is traced
unless a comm filter is set, as long as cmd is executing.
The output files are in ptout.CPU and sideband.

sptcmd [options] cmd
-c COMM  Set comm filter for comm (only trace that command)
-k trace kernel code
-U disable user trace
-t enable msr trace in side band
-x BINARY  run decoder with binary (should use -c too)
-R disable return compression
-d Always reload driver
-N Don't dump data
EOU
}

unset COMM KERNEL TRACE USERMODE BINARY DISRETC DRIVER DONTDUMP

while getopts "c:ktUx:RdN" opt ; do
	case "$opt" in
	c) COMM="$OPTARG" ;;
	k) KERNEL=1 ;;
	t) TRACE=1 ;;
	U) USERMODE=0 ;;
	x) BINARY="$OPTARG" ;;
	R) DISRETC=1 ;;
	d) DRIVER=1 ;;
	N) DONTDUMP=1 ;;
	\?) usage ; exit 1 ;;
	*) break ;;
	esac
done
shift $((OPTIND - 1))

COMM=${COMM:-}
KERNEL=${KERNEL:-0}
TRACE=${TRACE:-}
USERMODE=${USERMODE:-1}
BINARY=${BINARY:-}
DISRETC=${DISRETC:-0}
DRIVER=${DRIVER:-}
DONTDUMP=${DONTDUMP:-}

PATH=$PATH:$(dirname $0)

[ -n "$DRIVER" ] && /sbin/rmmod simple_pt
if ! lsmod | grep -q simple_pt ; then
	if [ -r simple-pt.ko ] ; then
		/sbin/insmod simple-pt.ko start=0
	else
		/sbin/modprobe simple-pt start=0
	fi
fi
C=/sys/module/simple_pt/parameters
if [ -n "$COMM" ] ; then
	echo $COMM > $C/comm_filter
	echo 1 > $C/cr3_filter
fi
if [ -n "$TRACE" ] ; then
	echo $TRACE > $C/trace_msrs
fi
echo $KERNEL > $C/kernel
echo $USERMODE > $C/user
echo $DISRETC > $C/dis_retc
T=/sys/kernel/debug/tracing
echo 1 > $T/events/pttp/exec_cr3/enable
echo 1 > $T/events/pttp/mmap_cr3/enable
echo > $T/trace
echo 1 > $C/start
"$@"
echo 0 > $C/start
echo 0 > $T/events/pttp/exec_cr3/enable
echo 0 > $T/events/pttp/mmap_cr3/enable
if [ -z "$DONTDUMP" ] ;
	sptdump
	grep -v '^#' $T/trace > sideband
fi
if [ -n "$BINARY" ] ; then
	if [ -n "$COMM" ] ; then
		# XXX assumes program does not change CPUs
		# FIXME
		CPU=$(grep "$COMM-" sideband | awk ' { print $2 ; exit }' )
		ptxed --pt ptout.$CPU --elf "$BINARY"
	else
		for i in ptout.* ; do
			ptxed --pt $i --elf "$BINARY"
		done
	fi
fi
