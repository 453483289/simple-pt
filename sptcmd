#!/bin/bash
# simple pt trace a command
# sptcmd [-k] [-c comm-to-filter] cmd
# -k trace kernel code
# -U disable user trace
# -t enable msr trace in side band
# -x BINARY  run decoder with binary (should use -c too)
# -R disable return compression

while getopts "c:ktUx:R" opt ; do
	case "$opt" in
	c) COMM="$OPTARG" ;;
	k) KERNEL=1 ;;
	t) TRACE=1 ;;
	U) USER=0 ;;
	x) BINARY="$OPTARG" ;;
	R) DISRETC=1 ;;
	\?) exit 1 ;;
	*) break ;;
	esac
done
shift $((OPTIND - 1))

COMM=${COMM:-}
KERNEL=${KERNEL:-0}
TRACE=${TRACE:-}
USER=${USER:-1}
BINARY=${BINARY:-}
DISRETC=${DISRETC:-0}

PATH=$PATH:$(pwd)

if [ -r simple-pt.ko ] ; then
	/sbin/insmod simple-pt.ko start=0
else
	/sbin/modprobe simple-pt start=0
fi
C=/sys/module/simple_pt/parameters
if [ -n "$COMM" ] ; then
	echo $COMM > $C/comm_filter
	echo 1 > $C/cr3_filter
fi
if [ -n "$TRACE" ] ; then
	echo $TRACE > $C/trace_msrs
fi
echo $KERNEL > $C/kernel
echo $USER > $C/user
echo $DISRETC > $C/dis_retc
T=/sys/kernel/debug/tracing
echo 1 > $T/events/pttp/exec_cr3/enable
echo > $T/trace
echo 1 > $C/start
"$@"
echo 0 > $C/start
echo 0 > $T/events/pttp/exec_cr3/enable
sptdump
grep -v '^#' $T/trace > sideband
if [ -n "$BINARY" ] ; then
	if [ -n "$COMM" ] ; then
		# XXX assumes program does not change CPUs
		# FIXME
		CPU=$(grep "$COMM-" sideband | awk ' { print $2 ; exit }' )
		ptxed --pt ptout.$CPU --elf "$BINARY"
	else
		for i in ptout.* ; do
			ptxed --pt $i --elf "$BINARY"
		done
	fi
fi
